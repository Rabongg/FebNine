name: Build docker image, push to ECR and deploy to EC2 server.

on:
  push:
    branches: [ "main" ]

jobs:

  build:
    name: Build Image
    runs-on: ubuntu-latest

    steps:
    
    - name: Check out code
      uses: actions/checkout@v3
    
    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1
    
    - name: Create .env file for production
      env:
        ENV_FILE: .env.production
      run: |
          touch $ENV_FILE
          echo MYSQL_HOST=${{ secrets.MYSQL_HOST }} >> $ENV_FILE
          echo MYSQL_PORT=${{ secrets.MYSQL_PORT }} >> $ENV_FILE
          echo MYSQL_USER=${{ secrets.MYSQL_USER }} >> $ENV_FILE
          echo MYSQL_PASSWORD=${{ secrets.MYSQL_PASSWORD }} >> $ENV_FILE
          echo MYSQL_DATABASE=${{ secrets.MYSQL_DATABASE }} >> $ENV_FILE
          echo KAKAO_REST_API_KEY=${{ secrets.KAKAO_KEY }} >> $ENV_FILE
          echo AWS_ACCESS_KEY=${{ secrets.AWS_ACCESS_KEY }} >> $ENV_FILE
          echo AWS_SECRET_KEY=${{ secrets.AWS_SECRET_KEY }} >> $ENV_FILE
          echo S3_BUCKET=${{ secrets.S3_BUCKET }} >> $ENV_FILE
          echo S3_URL=${{ secrets.S3_URL }} >> $ENV_FILE
          echo JWT_SECRET=${{ secrets.JWT_SECRET }} >> $ENV_FILE
          cat $ENV_FILE

    - name: Build, tag, and push Dokcer image to Amazon ECR
      env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: rabong
          IMAGE_TAG: latest
      run: |
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
      
  deploy:
    needs: build
    name: Deploy to AWS EC2 server
    runs-on: ubuntu-latest
    
    steps:
      - name: Check out code
        uses: actions/checkout@v3
      
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}
  
      - name: AWS SSM Send-Command
        uses: peterkimzz/aws-ssm-send-command@v1.1.1
        env:
          ECR_REPOSITORY: rabong
          IMAGE_TAG: latest
        with:
            aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
            aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
            aws-region: ${{ secrets.AWS_REGION }}
            instance-ids: ${{ secrets.REMOTE_HOST }}
            working-directory: /home/${{ secrets.REMOTE_USER }}
            command: /bin/bash start.sh